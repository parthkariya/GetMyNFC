"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var core_1 = require("@material-ui/core");
var styles_1 = require("@material-ui/core/styles");
var react_1 = __importStar(require("react"));
var react_share_1 = require("react-share");
var useStyles = (0, styles_1.makeStyles)({
    container: {
        position: 'relative',
        background: 'white',
        color: '#000',
        /* width: 100%, */
        maxWidth: '568px',
        height: 'auto',
        padding: '30px',
        outline: 'none',
        minWidth: '250px'
    },
    title: {
        textAlign: 'left',
        fontFamily: 'Apple SD Gothic Neo',
        fontStyle: 'normal',
        fontWeight: 800,
        fontSize: '20px',
        lineHeight: '24px',
    },
    iconContainer: {
        /* width: 50%, */
        /* margin: auto, */
        /* margin-bottom: 1.5rem, */
        paddingTop: '20px',
        paddingBottom: '15px',
        textAlign: 'left',
        '& button': {
            flex: '1 1 auto',
            border: 'none',
            textAlign: 'center',
            margin: '5px',
        },
    },
    closeImg: {
        position: 'absolute',
        display: 'flex',
        top: '20px',
        right: '20px',
        height: '50px',
        width: '50px',
        alignItems: 'flex-start',
        justifyContent: 'flex-end',
        zIndex: 9,
        '&:hover': {
            cursor: 'pointer',
        }
    },
    copyContainer: {
        position: 'relative',
        padding: '14px',
        border: '1px solid grey',
        color: '#263238',
        cursor: 'text',
        display: 'inline-flex',
        fontSize: '14px',
        boxSizing: 'border-box',
        alignItems: 'center',
        fontFamily: '"Roboto", "Helvetica", "Arial", sans-serif',
        letterSpacing: '-0.05px',
        width: '100%',
        fontStyle: 'normal',
        fontWeight: 'normal',
        background: 'black',
        borderRadius: '4px',
        /* identical to box height, or 143% */
    },
    copyUrl: {
        color: 'white',
        maxWidth: 'calc(100% - 55px)',
        overflowX: 'auto',
        fontSize: '16px',
        lineHeight: '24px',
        whiteSpace: 'nowrap',
    },
    copyIcon: {
        width: 'auto',
        position: 'absolute',
        right: '0px',
        color: '#0C66FF',
        fontWeight: 'bold',
        '& p': {
            paddingRight: '15px',
            paddingLeft: '15px',
        },
        '&:hover': {
            cursor: 'pointer',
        }
    },
    modalStyle: {
        outline: 'none',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        '&:focus': {
            outline: 'none',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            border: 'none',
        },
        '&:hover': {
            border: 'none',
            outline: 'none',
        }
    }
});
var components = {
    facebook: {
        Button: react_share_1.FacebookShareButton,
        Icon: react_share_1.FacebookIcon
    },
    twitter: {
        Button: react_share_1.TwitterShareButton,
        Icon: react_share_1.TwitterIcon
    },
    reddit: {
        Button: react_share_1.RedditShareButton,
        Icon: react_share_1.RedditIcon
    },
    hatena: {
        Button: react_share_1.HatenaShareButton,
        Icon: react_share_1.HatenaIcon
    },
    instapaper: {
        Button: react_share_1.InstapaperShareButton,
        Icon: react_share_1.InstapaperIcon
    },
    line: {
        Button: react_share_1.LineShareButton,
        Icon: react_share_1.LineIcon
    },
    linkedin: {
        Button: react_share_1.LinkedinShareButton,
        Icon: react_share_1.LinkedinIcon
    },
    livejournal: {
        Button: react_share_1.LivejournalShareButton,
        Icon: react_share_1.LivejournalIcon
    },
    mailru: {
        Button: react_share_1.MailruShareButton,
        Icon: react_share_1.MailruIcon
    },
    ok: { Button: react_share_1.OKShareButton, Icon: react_share_1.OKIcon },
    whatsapp: {
        Button: react_share_1.WhatsappShareButton,
        Icon: react_share_1.WhatsappIcon
    },
    pinterest: {
        Button: react_share_1.PinterestShareButton,
        Icon: react_share_1.PinterestIcon
    },
    email: {
        Button: react_share_1.EmailShareButton,
        Icon: react_share_1.EmailIcon
    },
    viber: {
        Button: react_share_1.ViberShareButton,
        Icon: react_share_1.ViberIcon
    },
    telegram: {
        Button: react_share_1.TelegramShareButton,
        Icon: react_share_1.TelegramIcon
    },
    workspace: {
        Button: react_share_1.WorkplaceShareButton,
        Icon: react_share_1.WorkplaceIcon
    }
};
function ShareSocial(props) {
    var classes = useStyles();
    var _a = (0, react_1.useState)(false), isCopied = _a[0], setIsCopied = _a[1];
    var title = props.title, _b = props.socialTypes, socialTypes = _b === void 0 ? ['facebook', 'twitter'] : _b, style = props.style, url = props.url, onSocialButtonClicked = props.onSocialButtonClicked;
    var copyToClipboard = function (text) {
        if (navigator && navigator.clipboard)
            navigator.clipboard.writeText(text)
                .then(function () { setIsCopied(true); })
                .catch(function (error) { alert("Copy failed! ".concat(error)); });
    };
    function getComponent(type) {
        var _a = components[type], Button = _a.Button, Icon = _a.Icon;
        return (0, jsx_runtime_1.jsx)(core_1.Tooltip, __assign({ title: "", placement: "top" }, { children: (0, jsx_runtime_1.jsx)(Button, __assign({ url: url, quote: title, onClick: function () { return onSocialButtonClicked(type); } }, { children: (0, jsx_runtime_1.jsx)(Icon, { size: 40, round: true }) })) }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", __assign({ className: classes.container, style: style === null || style === void 0 ? void 0 : style.root }, { children: [title && (0, jsx_runtime_1.jsxs)("h1", __assign({ className: classes.title }, { children: [" ", title, " "] })), (0, jsx_runtime_1.jsx)("div", __assign({ className: classes.iconContainer }, { children: Array.isArray(socialTypes) && socialTypes.map(function (type, idx) { return ((0, jsx_runtime_1.jsx)(react_1.default.Fragment, { children: getComponent(type) }, "social_item_" + idx)); }) })), (0, jsx_runtime_1.jsxs)("div", __assign({ className: classes.copyContainer, style: style === null || style === void 0 ? void 0 : style.copyContainer }, { children: [(0, jsx_runtime_1.jsx)("div", __assign({ className: classes.copyUrl }, { children: url })), (0, jsx_runtime_1.jsx)("div", __assign({ className: classes.copyIcon, onClick: function () { return copyToClipboard(url); } }, { children: (0, jsx_runtime_1.jsxs)("p", { children: [" ", isCopied ? 'Copied' : 'Copy', " "] }) }))] }))] })));
}
exports.default = ShareSocial;
